npx @tailwindcss/cli -i ./src/tailwind.css -o ./css/styles.css --watch

container notes:
px-18
xl: px 30





<div class="product-media w-full mb-8 lg:w-[60%] lg:mr-10">
    <div class="main-image__wrapper">
        <img class="object-contain" src="./assets/PAPATUI_single-product_image.png" alt="">
    </div>

    <!-- Glide Thumbnail Carousel -->
    <div class="glide product-thumbs grid mt-4 relative">
        <div class="glide__arrows" data-glide-el="controls">
            <button class="thumb-arrow prev glide__arrow glide__arrow--left absolute left-0 top-1/2 -translate-y-1/2"
                data-glide-dir="<">
                <!-- left svg -->
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                    stroke="currentColor" class="size-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                </svg>

            </button>
            <button class="thumb-arrow next glide__arrow glide__arrow--right absolute right-0 top-1/2 -translate-y-1/2"
                data-glide-dir=">">
                <!-- right svg -->
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                    stroke="currentColor" class="size-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                </svg>

            </button>
        </div>

        <div class="glide__track" data-glide-el="track">
            <ul class="glide__slides thumbnails__wrapper my-[18px] flex">
                <li class="glide__slide thumbnail">
                    <img class="w-full h-auto object-contain" src="./assets/PAPATUI_single-product_image.png"
                        alt="View 1">
                </li>
                <li class="glide__slide thumbnail">
                    <img class="w-full h-auto object-contain" src="./assets/PAPATUI_PDP_Toner__02.png" alt="View 2">
                </li>
                <li class="glide__slide thumbnail">
                    <img class="w-full h-auto object-contain" src="./assets/PAPATUI_PDP_Toner__03.png" alt="View 3">
                </li>
                <li class="glide__slide thumbnail">
                    <img class="w-full h-auto object-contain" src="./assets/PAPATUI_PDP_Toner__04.png" alt="View 4">
                </li>
                <li class="glide__slide thumbnail">
                    <img class="w-full h-auto object-contain" src="./assets/PAPATUI_PDP_Toner__05.png" alt="View 5">
                </li>
                <li class="glide__slide thumbnail">
                    <img class="w-full h-auto object-contain" src="./assets/PAPATUI_PDP_Toner__06.png" alt="View 6">
                </li>
                <li class="glide__slide thumbnail">
                    <img class="w-full h-auto object-contain" src="./assets/PAPATUI_PDP_Toner__07.png" alt="View 7">
                </li>
            </ul>
        </div>
    </div>
</div>

.product-thumbs .thumbnail {
cursor: pointer;
border: 1px solid transparent;

}

.product-thumbs .thumbnail.is-active {
border-color: #212322;
}

.product-thumbs .glide__track {
max-width: calc(100% - 80px); /* leave space for arrows (40px each side) */
margin: 0 auto; /* center it */
}

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const mainImg = document.querySelector(".main-image__wrapper img");
        const glideEl = document.querySelector(".glide.product-thumbs");
        const glide = new Glide(glideEl, {
            type: "slider",
            startAt: 0,
            focusAt: 0,
            gap: 12,
            perView: 5,
            bound: true,
            breakpoints: {

                768: { perView: 5 },
                640: { perView: 3 }
            }
        });

        function updateMainFromIndex(index) {
            const slide = glideEl.querySelectorAll(".glide__slide")[index];
            const img = slide?.querySelector("img");
            if (!img) return;
            mainImg.src = img.src;
            mainImg.alt = img.alt || "Product image";
            // active style
            glideEl.querySelectorAll(".thumbnail").forEach(li => li.classList.remove("is-active"));
            slide.classList.add("is-active");
        }

        // Init + on slide change
        glide.on(["mount.after", "run.after"], () => {
            updateMainFromIndex(glide.index);
        });

        // Click a thumbnail to go there
        glideEl.addEventListener("click", (e) => {
            const li = e.target.closest(".glide__slide");
            if (!li) return;
            const slides = [...glideEl.querySelectorAll(".glide__slide")];
            const idx = slides.indexOf(li);
            if (idx > -1) glide.go("=" + idx);
        });

        glide.mount();
    });
</script>